[project]
name = "mxm-scaffold"
version = "0.18.4"
description = "Client library Created by the Merantix Momentum AI Platform Team"
authors = [
    {name = "Merantix Momentum GmbH"}
]
license = {text = "MIT License"}
readme = "README.md"
requires-python = ">=3.9.0,<3.13"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]

dependencies = [
    "hydra-core>=1.0.4",
    "flatten-dict",
    "psutil",
    "PyJWT>=2.4.0",  # See: https://github.com/advisories/GHSA-ffqj-6fqr-9h24
    "pynvml",
    "random-name",
    "numpy>=1.0.0; python_version>='3.10'",
    "numpy<2.0.0; python_version<'3.10'",  # issue with pyarrow if we dont explicitly downgrade in this case
    # the two pins below are only necessary for poetry to converge in its dependency resolving
    "urllib3>=1.26.5",
    "botocore>=1.36.3",
    "tqdm",
]

[project.urls]
Repository = "https://github.com/merantix-momentum/scaffold-core/"
Documentation = "https://docs.scaffold.merantix-momentum.cloud/"
Homepage = "https://merantix-momentum.com"

[project.optional-dependencies]
# data
data = [
    "fsspec>=2024.12.0",  # Experience shows best keep it updated
    "gcsfs>=2024.12.0",   # Experience shows best keep it updated
]

# flyte
flyte = [
    "cookiecutter>=2.1.1",  # Required by flyte, see https://github.com/advisories/GHSA-f4q6-9qm4-h8j4
    "docker>=7.1.0",  # This version resolves the need for pinning requests https://github.com/docker/docker-py/releases/tag/7.1.0
    "flytekit>=1.14.3,<2.0.0",  # lower bound due to flytelauncher usage of flytekit api
    "flytekitplugins-omegaconf",
    "flytekitplugins-pod",
    "GitPython>=3.1.26",
    "jsonpickle",
    "marshmallow-enum>=1.5.1",  # flytekit dependency that isn't resolved properly
    "pyprojroot>=0.3.0",
]

# torch
torch = [
    "torch>=1.13.0",
    "pytorch-lightning>=1.9,<2.5",  # Newer versions not backwards compatible with scaffold
]

# wandb
wandb = [
    "wandb",
]

# all optional dependencies combined
all = [
    "cookiecutter>=2.1.1",
    "docker>=7.1.0",
    "flytekit>=1.14.3,<2.0.0",
    "flytekitplugins-omegaconf",
    "flytekitplugins-pod",
    "jsonpickle",
    "marshmallow-enum>=1.5.1",
    "pyprojroot>=0.3.0",
    "pytorch-lightning>=1.9,<2.5",
    "torch>=1.13.0",
    "wandb",
    "fsspec>=2024.12.0",
    "gcsfs>=2024.12.0",
]

# development dependencies
dev = [
    "autopep8==1.7.0",
    "black==22.8.0",
    "mockito",
    "pre-commit>=2.16.0",
    "py",
    "pytest>=7.2,<9.0",
    "pytest-cov",
    "pytest-git",
    "pytest-mock",
    "pytest-timeout>=2.1.0",
    "pytest-xdist>=3.2.0",
    "pytest-xprocess",
    "setuptools>65.5.1",  # See GHSA-r9hx-vwmv-q579
    "twine==5.1.1",
    "importlib-metadata==7.1.0",
    "wheel>=0.38.4",
    "build>=0.10,<1.3",
    "multiprocess>=0.70.14; sys_platform=='darwin'",
]

# docs dependencies
docs = [
    "sphinx>=7.0",
    "sphinx-autoapi",
    "sphinx-rtd-theme==3.0.2",
    "click<8.1.0",  # https://github.com/streamlit/streamlit/issues/4555
]

[[tool.uv.index]]
name = "PyPI"
priority = "primary"
url = "https://pypi.org/simple"

[[tool.uv.index]]
name = "mxm-pypi-registry"
url = "https://europe-west1-python.pkg.dev/mx-labs-devops/labs-pypi-registry/simple"
explicit = true
authenticate = "always"

[tool.uv.sources]
sphinx-mx-theme = { index = "mxm-pypi-registry" }
mx-sphinx-click = { index = "mxm-pypi-registry" }

[build-system]
requires = ["uv_build>=0.8.11,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
namespace = true

[tool.autopep8]
max_line_length = 120
ignore = "E265,E501,E203"
in-place = true
recursive = true

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.isort]
case_sensitive = false
known_first_party = [
]
known_third_party = [
]
line_length = 120
order_by_type = false
profile = "black"

[tool.ruff]
ignore = [
    # E203: Space before :. Deactivated because of incompatibility with black, see https://github.com/ambv/black#slices.
    "E203",
    # E402: Module level import not at top of file. We sometimes need this (e.g. mparams, dataflow).
    "E402",
    # W605: Invalid escape sequence 'x'. Necessary because of Flake8 update in
    #       https://github.com/merantix/core/commit/dee61ff623b2cb08d6827afcea502edb9a8f76fb
    "W605",
    # Exceptions for the type hinting plugin, flake8-annotations
    "ANN002", # Missing type annotation for *args
    "ANN003", # Missing type annotation for **kwargs
    "ANN101", # Missing type annotation for self in method
    "ANN102", # Missing type annotation for cls in classmethod
    "ANN204", # Missing return type annotation for special method, e.g. init
    # The following is for the docstring plugin, to make it less whiny. We are happy if we have docs on all functions
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D104", # Missing docstring in public package
    "D202", # No blank lines allowed after function docstring
    "D205", # 1 blank line required between summary line and description
    "D212", # Multi-line docstring summary should start at the first line
    "D415", # First line should end with a period, question mark, or exclamation point
]
line-length = 120

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
ignore_missing_imports = true
implicit_optional = true
